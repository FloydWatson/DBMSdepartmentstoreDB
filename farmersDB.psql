
-- ----------------------------------------------------------
-- TABLES
-- ----------------------------------------------------------

CREATE TABLE address(
    address_id serial PRIMARY KEY NOT NULL,
    street_address VARCHAR(100) NOT NULL,
    city VARCHAR(50) NOT NULL,
    region VARCHAR(50) NOT NULL,
    zip_code VARCHAR(10),
    country VARCHAR(40) NOT NULL

);

-- ----------------------------------------------------------

CREATE TABLE contact_details(
    contact_details_id serial PRIMARY KEY NOT NULL,
    email VARCHAR(50) NOT NULL,
    phone_number VARCHAR(25) NOT NULL,
    address_id INT  --- FK from address
   
);

-- ----------------------------------------------------------

CREATE TABLE club_card(
    club_card_id serial PRIMARY KEY NOT NULL,
    expiry_date DATE NOT NULL,
    card_number VARCHAR(25) NOT NULL

);

-- ----------------------------------------------------------

CREATE TABLE reward(
    reward_id serial PRIMARY KEY NOT NULL,
    account_id INT, --- FK from farmers_club_account
    reward_type VARCHAR(20) NOT NULL,
    reward_description VARCHAR(250)

);

-- ----------------------------------------------------------

CREATE TABLE farmers_club_account(
    account_id serial PRIMARY KEY NOT NULL,
    customer_id INT, -- FK from customer
    user_name VARCHAR(20) NOT NULL,
    points FLOAT(6),
    club_card_id INT, -- FK from club_card
    store_id INT -- FK from store

);

-- ----------------------------------------------------------

CREATE TABLE customer(
    customer_id serial PRIMARY KEY NOT NULL,
    given_name VARCHAR(25) NOT NULL,
    family_name VARCHAR(25) NOT NULL,
    contact_details_id INT -- FK from contact_details   

);

-- ----------------------------------------------------------

CREATE TABLE supplier(
    supplier_id serial PRIMARY KEY NOT NULL,
    company_name VARCHAR(25) NOT NULL,
    contact_name VARCHAR(25),
    contact_details_id INT -- FK from contact_details  

);

-- ----------------------------------------------------------

CREATE TABLE employee(
    employee_id serial PRIMARY KEY NOT NULL,
    given_name VARCHAR(25) NOT NULL,
    family_name VARCHAR(25) NOT NULL,
    contact_details_id INT, -- FK from contact_details 
    job_id INT, -- FK from job
    salary FLOAT(10) NOT NULL,
    manager_id INT, -- FK from employee
    department_id INT, -- FK from department_id
    pay_info_id INT -- FK from pay_info    

);

-- ----------------------------------------------------------

CREATE TABLE job(
    job_id serial PRIMARY KEY NOT NULL,
    job_title VARCHAR(25) NOT NULL,
    min_salary FLOAT(10),
    max_salary FLOAT(10)

);

-- ----------------------------------------------------------

CREATE TABLE pay_info(
    pay_info_id serial PRIMARY KEY NOT NULL,
    frequency VARCHAR(15) NOT NULL,
    account VARCHAR(25) NOT NULL

);

-- ----------------------------------------------------------

CREATE TABLE department(
    department_id serial PRIMARY KEY NOT NULL,
    department_name VARCHAR(25) NOT NULL,
    store_id INT -- FK from store
    
);

-- ----------------------------------------------------------

CREATE TABLE store(
    store_id serial PRIMARY KEY NOT NULL,
    contact_details_id INT, -- FK from contact_details
    store_name VARCHAR(25)   

);

-- ----------------------------------------------------------

CREATE TABLE shipper(
    shipper_id serial PRIMARY KEY NOT NULL,
    shipper_name VARCHAR(30) NOT NULL,
    phone_number VARCHAR(20) NOT NULL

);

-- ----------------------------------------------------------

CREATE TABLE shipping(
    shipping_id serial PRIMARY KEY NOT NULL,
    shipped_date DATE,
    shipper_id INT, -- FK from shipper
    address_id INT -- FK from address

);

-- ----------------------------------------------------------

CREATE TABLE order_detail(
    order_detail_id serial PRIMARY KEY NOT NULL,
    customer_id INT, -- FK from customer
    employee_id INT, -- FK from employee
    order_date DATE,
    order_status VARCHAR(10),
    shipping_id INT, -- FK from shipping
    freight FLOAT(7),
    store_id INT, -- FK from store
    sub_total FLOAT(7),
    total FLOAT(7)

);

-- ----------------------------------------------------------

CREATE TABLE order_line(
    order_line_id serial PRIMARY KEY NOT NULL,
    order_detail_id INT, -- FK from order_detail
    product_id INT, -- FK from product
    quantity FLOAT(3) NOT NULL, 
    discount FLOAT(3)

);

-- ----------------------------------------------------------

CREATE TABLE category(
    category_id serial PRIMARY KEY NOT NULL,
    department_id INT, -- FK from department
    category_name VARCHAR(25) NOT NULL,
    description VARCHAR(150)

);

-- ----------------------------------------------------------

CREATE TABLE product(
    product_id serial PRIMARY KEY NOT NULL,
    product_name VARCHAR(150) NOT NULL,
    brand_id INT, -- FK from brand
    product_display_id INT -- FK from product_display

);

-- ----------------------------------------------------------

CREATE TABLE stock(
    stock_id serial PRIMARY KEY NOT NULL,
    product_id INT, -- FK from product
    supplier_id INT, -- FK from supplier
    category_id INT, -- FK from category
    department_id INT, -- FK from department
    store_id INT, -- FK from store
    unit_price FLOAT(7) NOT NULL,
    unit_in_stock FLOAT(4),
    unit_on_hold FLOAT(4),
    unit_available FLOAT(4),
    discontinued CHAR(1)

);

-- ----------------------------------------------------------

CREATE TABLE brand(
    brand_id serial PRIMARY KEY NOT NULL,
    brand_name VARCHAR(25) NOT NULL,
    brand_logo BYTEA

);

-- ----------------------------------------------------------

CREATE TABLE product_display(
    product_display_id serial PRIMARY KEY NOT NULL,
    product_description VARCHAR(250),
    product_image BYTEA,
    return_policy VARCHAR(250)

);

-- ----------------------------------------------------------

CREATE TABLE product_promotion(
    product_promotion_id serial PRIMARY KEY NOT NULL,
    promotion_id INT, -- FK from promotion
    product_id INT -- FK from product

);

-- ----------------------------------------------------------

CREATE TABLE promotion(
    promotion_id serial PRIMARY KEY NOT NULL,
    promotion_name VARCHAR(25) NOT NULL,
    promotion_discount FLOAT(3),
    promotion_details VARCHAR(250),
    promotion_start_date DATE,
    promotion_end_date DATE

);

-- ----------------------------------------------------------
-- CONSTRAINTS
-- ----------------------------------------------------------

ALTER TABLE reward ADD 
    CONSTRAINT account_id FOREIGN KEY (account_id)
        REFERENCES farmers_club_account (account_id);

-- ----------------------------------------------------------

ALTER TABLE contact_details ADD 
    CONSTRAINT address_id FOREIGN KEY (address_id)
        REFERENCES address (address_id);

-- ----------------------------------------------------------

ALTER TABLE farmers_club_account ADD  
    CONSTRAINT customer_id FOREIGN KEY (customer_id)
        REFERENCES customer (customer_id);

ALTER TABLE farmers_club_account ADD 
    CONSTRAINT club_card_id FOREIGN KEY (club_card_id)
        REFERENCES club_card (club_card_id);

ALTER TABLE farmers_club_account ADD 
    CONSTRAINT store_id FOREIGN KEY (store_id)
        REFERENCES store (store_id);

-- ----------------------------------------------------------

ALTER TABLE customer ADD
    CONSTRAINT contact_details_id FOREIGN KEY (contact_details_id)
        REFERENCES contact_details (contact_details_id);

-- ----------------------------------------------------------

ALTER TABLE supplier ADD
    CONSTRAINT contact_details_id FOREIGN KEY (contact_details_id)
        REFERENCES contact_details (contact_details_id);

-- ----------------------------------------------------------

ALTER TABLE employee ADD
    CONSTRAINT contact_details_id FOREIGN KEY (contact_details_id)
        REFERENCES contact_details (contact_details_id);

ALTER TABLE employee ADD
    CONSTRAINT job_id FOREIGN KEY (job_id)
        REFERENCES job (job_id);

ALTER TABLE employee ADD
    CONSTRAINT manager_id FOREIGN KEY (manager_id)
        REFERENCES employee (employee_id);

ALTER TABLE employee ADD        
    CONSTRAINT department_id FOREIGN KEY (department_id)
        REFERENCES department (department_id);

ALTER TABLE employee ADD
    CONSTRAINT pay_info_id FOREIGN KEY (pay_info_id)
        REFERENCES pay_info (pay_info_id);

-- ----------------------------------------------------------

ALTER TABLE department ADD
    CONSTRAINT store_id FOREIGN KEY (store_id)
        REFERENCES store (store_id);

-- ----------------------------------------------------------

ALTER TABLE store ADD
    CONSTRAINT contact_details_id FOREIGN KEY (contact_details_id)
        REFERENCES contact_details (contact_details_id);

-- ----------------------------------------------------------

ALTER TABLE shipping ADD
    CONSTRAINT shipper_id FOREIGN KEY (shipper_id)
        REFERENCES shipper (shipper_id);

ALTER TABLE shipping ADD 
    CONSTRAINT address_id FOREIGN KEY (address_id)
        REFERENCES address (address_id);

-- ----------------------------------------------------------

ALTER TABLE order_detail ADD
    CONSTRAINT customer_id FOREIGN KEY (customer_id)
        REFERENCES customer (customer_id);

ALTER TABLE order_detail ADD
    CONSTRAINT employee_id FOREIGN KEY (employee_id)
        REFERENCES employee (employee_id);

ALTER TABLE order_detail ADD
    CONSTRAINT shipping_id FOREIGN KEY (shipping_id)
        REFERENCES shipping (shipping_id);

ALTER TABLE order_detail ADD
    CONSTRAINT store_id FOREIGN KEY (store_id)
        REFERENCES store (store_id);

-- ---------------------------------------------------------- 

ALTER TABLE order_line ADD
    CONSTRAINT order_detail_id FOREIGN KEY (order_detail_id)
        REFERENCES order_detail (order_detail_id);

ALTER TABLE order_line ADD 
    CONSTRAINT product_id FOREIGN KEY (product_id)
        REFERENCES product (product_id);

-- ----------------------------------------------------------

ALTER TABLE category ADD 
    CONSTRAINT department_id FOREIGN KEY (department_id)
        REFERENCES department (department_id);

-- ----------------------------------------------------------

ALTER TABLE product ADD        
    CONSTRAINT brand_id FOREIGN KEY (brand_id)
        REFERENCES brand (brand_id);

ALTER TABLE product ADD
    CONSTRAINT product_display_id FOREIGN KEY (product_display_id)
        REFERENCES product_display (product_display_id);

-- ----------------------------------------------------------

ALTER TABLE stock ADD
    CONSTRAINT supplier_id FOREIGN KEY (supplier_id)
        REFERENCES supplier (supplier_id);

ALTER TABLE stock ADD
    CONSTRAINT category_id FOREIGN KEY (category_id)
        REFERENCES category (category_id);

ALTER TABLE stock ADD
    CONSTRAINT store_id FOREIGN KEY (store_id)
        REFERENCES store (store_id);

ALTER TABLE stock ADD
    CONSTRAINT department_id FOREIGN KEY (department_id)
        REFERENCES department (department_id);

-- ----------------------------------------------------------

ALTER TABLE product_promotion ADD
    CONSTRAINT promotion_id FOREIGN KEY (promotion_id)
        REFERENCES promotion (promotion_id);

ALTER TABLE product_promotion ADD 
    CONSTRAINT product_id FOREIGN KEY (product_id)
        REFERENCES product (product_id);

-- ----------------------------------------------------------
-- INDEX
-- ----------------------------------------------------------

CREATE INDEX index_address_city
    ON address(city); -- search addresses by city

CREATE INDEX index_address_region
    ON address(region); -- search addresses by region

CREATE INDEX index_address_country
    ON address(country); -- search addresses by country

-- ----------------------------------------------------------

CREATE INDEX index_reward_account_id
    ON reward(account_id); -- search rewards for account

-- ----------------------------------------------------------

CREATE INDEX index_customer_given_name
    ON customer(given_name); -- search customers by name

CREATE INDEX index_customer_family_name
    ON customer(family_name); -- search customers by name

-- ----------------------------------------------------------

CREATE INDEX index_supplier_company_name
    ON supplier(company_name); -- search suppliers by company name

-- ----------------------------------------------------------

CREATE INDEX index_employee_given_name
    ON employee(given_name); -- search employees by name

CREATE INDEX index_employee_family_name
    ON employee(family_name); -- search employees by name

CREATE INDEX index_employee_job_id
    ON employee(job_id); -- search employees by job

CREATE INDEX index_employee_manager_id
    ON employee(manager_id); -- search employees by manager they fall under

CREATE INDEX index_employee_department_id
    ON employee(department_id); -- search employees by department they work in

-- ----------------------------------------------------------

CREATE INDEX index_job_title
    ON job(job_title); -- search jobs by title

-- ----------------------------------------------------------

CREATE INDEX index_pay_info_frequency
    ON pay_info(frequency); -- search pay info by frequency paid

-- ----------------------------------------------------------

CREATE INDEX index_department_store_id
    ON department(store_id); -- search departments by what store they are in

-- ----------------------------------------------------------

CREATE INDEX index_store_name
    ON store(store_name); -- search stores by name

-- ----------------------------------------------------------

CREATE INDEX index_shipper_name
    ON shipper(shipper_name); -- search shippers by name

-- ----------------------------------------------------------

CREATE INDEX index_shipping_shipper_id
    ON shipping(shipper_id); -- search shippings by shipper

CREATE INDEX index_address_id
    ON shipping(address_id); -- search shippings for an address

-- ----------------------------------------------------------

CREATE INDEX index_order_detail_customer_id
    ON order_detail(customer_id); -- search orders for customers

CREATE INDEX index_order_detail_employee_id
    ON order_detail(employee_id); -- search orders by staff member involoved

CREATE INDEX index_order_detail_order_status
    ON order_detail(order_status); -- search orders by their status

CREATE INDEX index_order_detail_store_id
    ON order_detail(store_id); -- search orders by store

-- ----------------------------------------------------------

CREATE INDEX index_category_name
    ON category(category_name); -- search category by name

CREATE INDEX index_category_department_id
    ON category(department_id); -- search category by department

-- ----------------------------------------------------------

CREATE INDEX index_product_name
    ON product(product_name); -- search product by name

CREATE INDEX index_product_brand_id
    ON product(brand_id); -- search product by brand


-- ----------------------------------------------------------


CREATE INDEX index_stock_supplier_id
    ON stock(supplier_id); -- search stock by supplier

CREATE INDEX index_stock_category_id
    ON stock(category_id); -- search stock by category

CREATE INDEX index_stock_department_id
    ON stock(department_id); -- search stock by department

CREATE INDEX index_stock_store_id
    ON stock(store_id); -- search stock by store

CREATE INDEX index_stock_unit_in_stock
    ON stock(unit_in_stock); -- search stock by amount stocked

-- ----------------------------------------------------------

CREATE INDEX index_brand_name
    ON brand(brand_name); -- search brand by name

-- ----------------------------------------------------------

CREATE INDEX index_product_promotion_product
    ON product_promotion(product_id); -- search product_promotions by product

CREATE INDEX index_product_promotion_promotion
    ON product_promotion(promotion_id); -- search product_promotions by promotion

-- ----------------------------------------------------------

CREATE INDEX index_promotion_name
    ON promotion(promotion_name); -- search promotion by name

CREATE INDEX index_promotion_start_date
    ON promotion(promotion_start_date); -- search promotion by start date

CREATE INDEX index_promotion_end_date
    ON promotion(promotion_end_date); -- search promotion by end date